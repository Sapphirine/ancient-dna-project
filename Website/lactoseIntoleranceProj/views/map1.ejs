<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Interactive Timeline Map</title>
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
      crossorigin=""
    />
    <script
      src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
      integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
      crossorigin=""
    ></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.css"
    />
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet.markercluster@1.1.0/dist/MarkerCluster.Default.css"
    />
    <script src="https://unpkg.com/leaflet.markercluster@1.1.0/dist/leaflet.markercluster.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/nouislider@15.6.0/dist/nouislider.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/nouislider@15.6.0/dist/nouislider.min.js"></script>

    <style>
      body {
        font-family: Arial, sans-serif;
        background: linear-gradient(120deg, #0079bf, #28c76f);
        color: white;
        margin: 0;
        padding: 0;
      }
      h1 {
        text-align: center;
        padding: 20px;
        font-size: 2.5rem;
        color: #f9f9f9;
      }
      #map {
        height: 400px;
        margin: 20px auto;
        max-width: 90%;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
      }
      #controls {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin: 20px 0;
      }
      #slider-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 20px 0;
      }
      #slider {
        width: 80%;
        margin: 20px auto;
      }
      #slider-text {
        font-weight: bold;
        text-align: center;
        margin-top: 10px;
        color: #f1faee;
        font-size: 1.2rem;
      }
    </style>
  </head>

  <body>
    <h1>Interactive Timeline Map</h1>
    <div id="map"></div>

    <div id="controls">
      <div>
        <label for="year-input">Years Ago:</label>
        <input id="year-input" type="number" value="0" />
      </div>
      <button id="set-year-btn">Set Year</button>
    </div>

    <div id="slider-container">
      <div id="slider"></div>
      <div id="slider-text">Years Ago Range: 0 - 10</div>
    </div>

    <script>
      const map = L.map("map").setView([30, 0], 2);

      L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
        maxZoom: 19,
        attribution:
          '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
      }).addTo(map);

      const markers = L.markerClusterGroup();
      let sliderData = [];
      const yearInput = document.getElementById("year-input");
      const setYearButton = document.getElementById("set-year-btn");
      const sliderText = document.getElementById("slider-text");

      const slider = document.getElementById("slider");

      // Initialize noUiSlider
      noUiSlider.create(slider, {
        start: [0, 10],
        connect: true,
        range: {
          min: 0,
          max: 100,
        },
        step: 1,
      });

      const updateMarkers = (yearRange) => {
        markers.clearLayers();
        sliderData
          .filter(
            (d) => d["Mean Date"] >= yearRange[0] && d["Mean Date"] <= yearRange[1]
          )
          .forEach((d) => {
            const latitude = +d.Latitude;
            const longitude = +d.Longitude;
            if (!isNaN(latitude) && !isNaN(longitude)) {
              const marker = L.marker([latitude, longitude]).bindPopup(
                `Year: ${d["Mean Date"]}`
              );
              markers.addLayer(marker);
            }
          });
        map.addLayer(markers);
      };

      const updateSliderText = (yearRange) => {
        sliderText.textContent = `Years Ago Range: ${yearRange[0]} - ${yearRange[1]}`;
      };

      slider.noUiSlider.on("update", (values) => {
        const yearRange = values.map((v) => Math.round(+v));
        updateMarkers(yearRange);
        updateSliderText(yearRange);
      });

      const setYear = () => {
        const selectedYear = +yearInput.value;
        slider.noUiSlider.set([selectedYear, selectedYear]);
      };

      d3.json("/ancientHumanData.json")
        .then((data) => {
          sliderData = data.elements;

          const dataMinYear = d3.min(sliderData, (d) => d["Mean Date"]);
          const dataMaxYear = d3.max(sliderData, (d) => d["Mean Date"]);

          yearInput.value = dataMinYear;

          slider.noUiSlider.updateOptions({
            range: {
              min: dataMinYear,
              max: dataMaxYear,
            },
            start: [dataMinYear, dataMinYear + 1],
          });

          updateMarkers([dataMinYear, dataMinYear + 1]);
          updateSliderText([dataMinYear, dataMinYear + 1]);
        })
        .catch((err) => console.error("Error loading JSON:", err));

      setYearButton.addEventListener("click", setYear);
    </script>
  </body>
</html>
